<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.gl.incubate2.exdos</groupId>
  <artifactId>exdos-online</artifactId>
  <version>1.0.0.0-SNAPSHOT</version>

  <name>Dubbo enhanced exdos online</name>
  <packaging>jar</packaging>

  <properties>
    <spring.version>4.3.1.RELEASE</spring.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.gl.incubate2.extrade</groupId>
      <artifactId>extrade-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>dubbo</artifactId>
      <version>2.5.3</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>3.4.0</version>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.101tec</groupId>
      <artifactId>zkclient</artifactId>
      <version>0.9</version>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.13</version>
    </dependency>

    <!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.13</version> <scope>runtime</scope> </dependency> -->

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.3</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.1.3</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.2.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>startOnline</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <configuration>
              <executable>java</executable> <!-- executable指的是要执行什么样的命令 -->
              <arguments>
                <argument>-DsystemProperty1=value1</argument> <!-- 这是一个系统属性参数 -->
                <argument>-DsystemProperty2=value2</argument> <!-- 这是一个系统属性参数 -->
                <argument>-XX:MaxPermSize=256m</argument> <!-- 这是一个JVM参数 -->
                <argument>-classpath</argument> <!-- 这是classpath属性，其值就是下面的<classpath/> -->
                <classpath /> <!-- 这是exec插件最有价值的地方，关于工程的classpath并不需要手动指定，它将由exec自动计算得出 -->
                <argument>com.gl.extrade.online.boot.BootServerWithSpring</argument> <!-- 程序入口，主类名称 -->
                <argument>arg1</argument> <!-- 程序的第一个命令行参数 -->
                <argument>arg2</argument> <!-- 程序的第二个命令行参数 -->
                <!-- mvn exec:exec -->
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>startOnlineApi</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <configuration>
              <executable>java</executable> <!-- executable指的是要执行什么样的命令 -->
              <arguments>
                <argument>-DsystemProperty1=value1</argument> <!-- 这是一个系统属性参数 -->
                <argument>-DsystemProperty2=value2</argument> <!-- 这是一个系统属性参数 -->
                <argument>-XX:MaxPermSize=256m</argument> <!-- 这是一个JVM参数 -->
                <argument>-classpath</argument> <!-- 这是classpath属性，其值就是下面的<classpath/> -->
                <classpath /> <!-- 这是exec插件最有价值的地方，关于工程的classpath并不需要手动指定，它将由exec自动计算得出 -->
                <argument>com.gl.extrade.online.boot.BootServerWithApi</argument> <!-- 程序入口，主类名称 -->
                <argument>arg1</argument> <!-- 程序的第一个命令行参数 -->
                <argument>arg2</argument> <!-- 程序的第二个命令行参数 -->
                <!-- mvn exec:exec -->
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>startFrontend</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <configuration>
              <executable>java</executable> <!-- executable指的是要执行什么样的命令 -->
              <arguments>
                <argument>-DsystemProperty1=value1</argument> <!-- 这是一个系统属性参数 -->
                <argument>-DsystemProperty2=value2</argument> <!-- 这是一个系统属性参数 -->
                <argument>-XX:MaxPermSize=256m</argument> <!-- 这是一个JVM参数 -->
                <argument>-classpath</argument> <!-- 这是classpath属性，其值就是下面的<classpath/> -->
                <classpath /> <!-- 这是exec插件最有价值的地方，关于工程的classpath并不需要手动指定，它将由exec自动计算得出 -->
                <argument>com.gl.extrade.frontend.boot.BootClientWithSpring</argument> <!-- 程序入口，主类名称 -->
                <argument>arg1</argument> <!-- 程序的第一个命令行参数 -->
                <argument>arg2</argument> <!-- 程序的第二个命令行参数 -->
                <!-- mvn exec:exec -->
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
